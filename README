В git разнес по веткам - их не нужно сливать - там разные проекты, хотя по именам не 
пересекаются. кроме readme

# железо
    * нужен RTC, там же и память. записывать значение в eeprom. ​exmpl1 ​exmpl2
    показывает расход на 7 сегментнике - ddd.d куб.м ​Часы на Arduino используя DS3231
    * Берется счетчик с импульсным выходом. Один импульс на 10л воды. #36
    На ардуине импульсы заводятся на прерывания. В цикле 0.1 сек они проверяются если изменились, то каждые 5 минут записываются в eprom и передаются в брокера. Там же могут быть термометры - на подвал и воду. отличается от ArduSens
    * сделать кнопку показать на дисплее значение 

# используемые pin

    * 2 - interrupt int0
    * ONE_WIRE_BUS 3
    * TM1637 4,5 - display
    * PIN6 - показать данные на дисплее
    * PIN7-PIN9 для датчиков состояния
    * SerialTxControl? 10
    * A4(SDA),A5(SCL) - I2C 

#MQTT topic

стандартные от ArduSens. меняется название датчика и добавляется сообщение

    HHHH - номер платы
    XXXXXXXXXXXXXXX адрес датчика
    N номер контакта 

    ArduWaterHHHH/water/value=val - сколько насчитано литров/10
    ArduWaterHHHH/INFO/count=val - число термометров один раз при старте
    ArduWaterHHHH/DS1820-XXXXXXXXXXXXXXX/INFO/resolution=val - один раз при старте * ArduWaterHHHH/DS1820-XXXXXXXXXXXXXXX/value=val - температура. раз в 60 сек при изменении
    ArduWaterHHHH/latch-N/value=val - состояние контакта раз в 0.1 сек
    ArduWaterHHHH/INFO/alive=cnt раз в 60 сек счетчик на каждое сообщение +1(%256) 

